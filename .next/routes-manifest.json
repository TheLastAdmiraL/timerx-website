{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "/timerx-website",
  "redirects": [
    {
      "source": "/timerx-website/",
      "destination": "/timerx-website",
      "basePath": false,
      "internal": true,
      "statusCode": 308,
      "regex": "^/timerx-website/$"
    },
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/components/Footer",
      "regex": "^/components/Footer(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/components/Footer(?:/)?$"
    },
    {
      "page": "/components/HeroBackground",
      "regex": "^/components/HeroBackground(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/components/HeroBackground(?:/)?$"
    },
    {
      "page": "/components/Navbar",
      "regex": "^/components/Navbar(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/components/Navbar(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/download",
      "regex": "^/download(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/download(?:/)?$"
    },
    {
      "page": "/journey",
      "regex": "^/journey(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/journey(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": {
    "beforeFiles": [
      {
        "source": "/timerx-website//_next/:path+",
        "destination": "/timerx-website/_next/:path+",
        "regex": "^/timerx-website//_next(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))(?:/)?$"
      }
    ],
    "afterFiles": [],
    "fallback": []
  }
}